{"mappings":"ACEK,aAAa,OAAO,CAAC,UAAU,CAAA,OAAO,QAAQ,CAAC,IAAI,CAAG,+BAA3D,EAGA,MAAM,EAAS,CAAC,UAAW,YAAa,QAAS,QAAS,OAAQ,QAAQ,CAMpE,EAAM,SAAS,cAAc,CAAC,mBAAmB,UAAU,CAAC,MAC5D,EAA4B,SAAS,cAAc,CAAC,yBAG1D,EAAE,IAAI,CAAC,CACH,IARW,uGASX,KAAM,MACN,QAAS,SAAU,CAAQ,EAEvB,IAAM,EAAW,CAAQ,CAAC,YAAY,CAChC,EAAiB,CAAQ,CAAC,sBAAsB,CAGhD,EAAwB,CAAC;4CACE,EAAE,CAAQ,CAAC,YAAY,CAAC;6DACb,EAAE,CAAQ,CAAC,oBAAoB,CAAC;2CACzC,EAAE,CAAQ,CAAC,eAAe,CAAC;QAC9D,CAAC,AACD,CAAA,EAA0B,SAAS,CAAG,EAItC,IAAM,EAAgB,AADR,OAAO,IAAI,CAAC,GAAgB,OAAO,GACrB,GAAG,CAAC,AAAA,GAAQ,WAAW,CAAc,CAAC,EAAK,CAAC,WAAW,GAAG,KAAK,CAAC,EAAG,GAYnG,IAAI,MAAM,EAAK,CACX,KAAM,OACN,KAAM,CACF,OAZQ,EAAO,KAAK,CAAC,EAAG,GAaxB,SAAU,CAAC,CACP,MAAO,sBACP,gBAAiB,0BACjB,YAAa,wBACb,YAAa,EACb,KAlBwB,CAmB5B,EAAE,AACN,EACA,QAAS,CACL,WAAY,CAAA,EACZ,OAAQ,CACJ,EAAG,CACC,YAAa,CAAA,CACjB,CACJ,CACJ,CACJ,EA5BA,EACA,MAAO,SAAU,CAAK,EAClB,QAAQ,GAAG,CAAC,6CAA8C,EAC9D,CACJ","sources":["<anon>","app/pages/investments/investments.js"],"sourcesContent":["\"use strict\";\nif (!localStorage.getItem(\"loged\")) window.location.href = \"/gestao-financeira/index.html\";\n// Dados de exemplo para o gráfico\nconst labels = [\n    \"Janeiro\",\n    \"Fevereiro\",\n    \"Mar\\xe7o\",\n    \"Abril\",\n    \"Maio\",\n    \"Junho\"\n];\n// URL da API da Alpha Vantage\nconst apiUrl = \"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=PETR4.SA&apikey=I67ROA0OG2A40859\";\n// Elementos do DOM\nconst ctx = document.getElementById(\"investmentChart\").getContext(\"2d\");\nconst investmentInformationElem = document.getElementById(\"investmentInformation\");\n// Requisição AJAX para obter dados da API da Alpha Vantage\n$.ajax({\n    url: apiUrl,\n    type: \"GET\",\n    success: function(response) {\n        // Extrair dados relevantes da resposta da API\n        const metaData = response[\"Meta Data\"];\n        const timeSeriesData = response[\"Time Series (Daily)\"];\n        // Informações adicionais sobre o investimento\n        const investmentInformation = `\n            <p><strong>S\\xedmbolo:</strong> ${metaData[\"2. Symbol\"]}</p>\n            <p><strong>\\xdaltima Atualiza\\xe7\\xe3o:</strong> ${metaData[\"3. Last Refreshed\"]}</p>\n            <p><strong>Time Zone:</strong> ${metaData[\"5. Time Zone\"]}</p>\n        `;\n        investmentInformationElem.innerHTML = investmentInformation;\n        // Preparar dados para o gráfico\n        const dates = Object.keys(timeSeriesData).reverse(); // Obter as datas em ordem decrescente\n        const closingPrices = dates.map((date)=>parseFloat(timeSeriesData[date][\"4. close\"])).slice(0, 6); // Obter os preços de fechamento das últimas 6 datas\n        // Renderizar o gráfico com os dados obtidos\n        renderChart(labels.slice(0, 6), closingPrices);\n    },\n    error: function(error) {\n        console.log(\"Erro ao carregar dados do segundo gr\\xe1fico:\", error);\n    }\n});\n// Função para renderizar o gráfico com Chart.js\nfunction renderChart(labels, data) {\n    new Chart(ctx, {\n        type: \"line\",\n        data: {\n            labels: labels,\n            datasets: [\n                {\n                    label: \"Pre\\xe7o de Fechamento\",\n                    backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n                    borderColor: \"rgba(54, 162, 235, 1)\",\n                    borderWidth: 1,\n                    data: data\n                }\n            ]\n        },\n        options: {\n            responsive: true,\n            scales: {\n                y: {\n                    beginAtZero: false\n                }\n            }\n        }\n    });\n}\n\n//# sourceMappingURL=investments.9ff3cc10.js.map\n","'use strict';\n\nif (!localStorage.getItem('loged')) window.location.href = '/gestao-financeira/index.html';\n\n// Dados de exemplo para o gráfico\nconst labels = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho'];\n\n// URL da API da Alpha Vantage\nconst apiUrl = 'https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=PETR4.SA&apikey=I67ROA0OG2A40859';\n\n// Elementos do DOM\nconst ctx = document.getElementById('investmentChart').getContext('2d');\nconst investmentInformationElem = document.getElementById('investmentInformation');\n\n// Requisição AJAX para obter dados da API da Alpha Vantage\n$.ajax({\n    url: apiUrl,\n    type: 'GET',\n    success: function (response) {\n        // Extrair dados relevantes da resposta da API\n        const metaData = response['Meta Data'];\n        const timeSeriesData = response['Time Series (Daily)'];\n\n        // Informações adicionais sobre o investimento\n        const investmentInformation = `\n            <p><strong>Símbolo:</strong> ${metaData['2. Symbol']}</p>\n            <p><strong>Última Atualização:</strong> ${metaData['3. Last Refreshed']}</p>\n            <p><strong>Time Zone:</strong> ${metaData['5. Time Zone']}</p>\n        `;\n        investmentInformationElem.innerHTML = investmentInformation;\n\n        // Preparar dados para o gráfico\n        const dates = Object.keys(timeSeriesData).reverse(); // Obter as datas em ordem decrescente\n        const closingPrices = dates.map(date => parseFloat(timeSeriesData[date]['4. close'])).slice(0, 6); // Obter os preços de fechamento das últimas 6 datas\n\n        // Renderizar o gráfico com os dados obtidos\n        renderChart(labels.slice(0, 6), closingPrices);\n    },\n    error: function (error) {\n        console.log('Erro ao carregar dados do segundo gráfico:', error);\n    }\n});\n\n// Função para renderizar o gráfico com Chart.js\nfunction renderChart(labels, data) {\n    new Chart(ctx, {\n        type: 'line',\n        data: {\n            labels: labels,\n            datasets: [{\n                label: 'Preço de Fechamento',\n                backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                borderColor: 'rgba(54, 162, 235, 1)',\n                borderWidth: 1,\n                data: data\n            }]\n        },\n        options: {\n            responsive: true,\n            scales: {\n                y: {\n                    beginAtZero: false\n                }\n            }\n        }\n    });\n}\n"],"names":["localStorage","getItem","window","location","href","labels","ctx","document","getElementById","getContext","investmentInformationElem","$","ajax","url","type","success","response","metaData","timeSeriesData","investmentInformation","innerHTML","closingPrices","dates","Object","keys","reverse","map","date","parseFloat","slice","Chart","data","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","scales","y","beginAtZero","error","console","log"],"version":3,"file":"investments.9ff3cc10.js.map"}